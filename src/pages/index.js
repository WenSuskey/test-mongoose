import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { useEffect, useState } from "react";
import axios from "axios";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [task, setTask] = useState([]);
  const [inputV, setInputV] = useState("");
  const mongoose = require("mongoose");
  let userId = new mongoose.Types.ObjectId();
  let text = "test avafw";
  const deleteId = "64f5560e321c837be9944eda";
  const fetchTasks = () => {
    axios.get("api/get_task").then((res) => {
      setTask(res.data);
    });
  };
  const handleSubmit = (e) => {
    e.preventDefault();
    axios
      .post(`/api/set_task`, {
        userId: userId,
        title: inputV,
        content: text,
      })
      .then((res) => {
        setInputV("");
        fetchTasks();
      })

      .catch((err) => console.log(err));
  };
  const handleDelete = (id) => {
    axios.delete("/api/delete_task", { data: { id: deleteId } }).then((res) => {
      console.log(res);
      console.log("id", deleteId);
    });
  };
  useEffect(() => {
    fetchTasks();
  }, []);
  const changeId = "64f5588c321c837be9944ee5";
  const changeConter = {
    _id: "64f5588c321c837be9944ee5",
    userId: "64f5588ba1bdc4883e80bf13",
    title: "test1234235",
    content: "test avafw",
    likes: 0,
    createdAt: "2023-09-04T04:09:48.697Z",
    __v: 0,
  };

  console.log(changeConter);
  const handleUpdate = (id) => {
    axios
      .put("/api/update_task", { id: changeId, updateData: changeConter })
      .then((res) => {});
  };
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <form style={{ display: "flex" }}>
          <input
            type="text"
            value={inputV}
            onChange={(e) => {
              setInputV(e.target.value);
            }}
          />
          <button type="submit" onClick={handleSubmit}>
            submit
          </button>
        </form>
        <ul>
          {task.map((each) => (
            <li key={each._id}>{each.title}</li>
          ))}
        </ul>
        <button onClick={handleDelete}>delete</button>
        <button onClick={handleUpdate}>update</button>
      </main>
      <div></div>
    </>
  );
}
